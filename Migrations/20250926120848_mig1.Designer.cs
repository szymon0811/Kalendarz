// <auto-generated />
using System;
using Kalendarz;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kalendarz.Migrations
{
    [DbContext(typeof(kalendarzDbContext))]
    [Migration("20250926120848_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kalendarz.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EventTypeId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Kalendarz.Models.EventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("eventTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Urodziny"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Spotkanie"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Praca"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Dom"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Inne"
                        });
                });

            modelBuilder.Entity("Kalendarz.Models.Kierowca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kierowcy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Imie = "Valterri",
                            Nazwisko = "Botas"
                        },
                        new
                        {
                            Id = 2,
                            Imie = "Esteban",
                            Nazwisko = "Okon"
                        },
                        new
                        {
                            Id = 3,
                            Imie = "Sebastian",
                            Nazwisko = "Vetel"
                        },
                        new
                        {
                            Id = 4,
                            Imie = "Robert",
                            Nazwisko = "Kubica"
                        });
                });

            modelBuilder.Entity("Kalendarz.Models.Tor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nazwa = "Moroco Grand Prix"
                        },
                        new
                        {
                            Id = 2,
                            Nazwa = "Paris Grand Prix"
                        },
                        new
                        {
                            Id = 3,
                            Nazwa = "Sydney Grand Prix"
                        });
                });

            modelBuilder.Entity("Kalendarz.Models.Zestawienie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<TimeSpan>("Czas")
                        .HasColumnType("time");

                    b.Property<int>("IdKierowcy")
                        .HasColumnType("int");

                    b.Property<int>("IdToru")
                        .HasColumnType("int");

                    b.Property<int>("KierowcaId")
                        .HasColumnType("int");

                    b.Property<int>("TorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KierowcaId");

                    b.HasIndex("TorId");

                    b.ToTable("Zestawienia");
                });

            modelBuilder.Entity("Kalendarz.Models.Event", b =>
                {
                    b.HasOne("Kalendarz.Models.EventType", "EventType")
                        .WithMany()
                        .HasForeignKey("EventTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventType");
                });

            modelBuilder.Entity("Kalendarz.Models.Zestawienie", b =>
                {
                    b.HasOne("Kalendarz.Models.Kierowca", "Kierowca")
                        .WithMany()
                        .HasForeignKey("KierowcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kalendarz.Models.Tor", "Tor")
                        .WithMany()
                        .HasForeignKey("TorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kierowca");

                    b.Navigation("Tor");
                });
#pragma warning restore 612, 618
        }
    }
}
